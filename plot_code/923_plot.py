from turtle import color
import numpy as np
import matplotlib.pyplot as plt
import os
from scipy import interpolate
# from scipy.interpolate import spline

def Extract(lst, index):
    return [item[index] for item in lst]

atoms_num = 923
timestep_1 = 1 
tau = 1000 * timestep_1
delQ = 30 #eV


list_val = [
[ -3337.88 ,127.137 ],
[ -3310.61 ,187.672 ],
[ -3287.53 ,260.567 ],
[ -3270.79 ,390.781 ],
[ -3253.76 ,512.556 ],
[ -3239.82 ,543.018 ],
[ -3228.17 ,477.157 ],
[ -3220.42 ,480.075 ],
[ -3209.86 ,646.31 ],
[ -3197.9 ,687.778 ],
[ -3187.22 ,651.29 ],
[ -3181.23 ,677.777 ],
[ -3175.54 ,694.36 ],
[ -3167.52 ,688.541 ],
[ -3159.8 ,716.953 ],
[ -3151.5 ,753.328 ],
[ -3143.67 ,781.281 ],
[ -3136.57 ,757.587 ],
[ -3129.31 ,747.013 ],
[ -3122.47 ,780.845 ],
[ -3115.35 ,788.727 ],
[ -3108.26 ,783.249 ],
[ -3101.42 ,809.208 ],
[ -3094.95 ,811.712 ],
[ -3089.57 ,833.304 ],
[ -3083.28 ,844.11 ],
[ -3078.21 ,835.184 ],
[ -3072.93 ,854.829 ],
[ -3068.59 ,890.82 ],
[ -3064.03 ,908.013 ],
[ -3060.51 ,892.918 ],
[ -3056.59 ,898.69 ],
[ -3052.55 ,930.959 ],
[ -3049.02 ,917.761 ],
[ -3045.84 ,939.513 ],
[ -3043.78 ,953.852 ],
[ -3041.03 ,933.865 ],
[ -3038.96 ,949.342 ],
[ -3036.8 ,997.068 ],
[ -3035.09 ,964.44 ],
[ -3033.25 ,975.304 ],
[ -3031.35 ,984.155 ],
[ -3029.97 ,979.07 ],
[ -3028.3 ,989.116 ],
[ -3027.09 ,991.459 ],
[ -3026.27 ,986.412 ],
[ -3024.83 ,995.606 ],
[ -3024.11 ,991.267 ],
[ -3023.17 ,999.07 ],
[ -3022.61 ,1004.29 ],
[ -3020.83 ,1019.83 ],
[ -3020.93 ,1015.54 ],
[ -3020.52 ,1026.51 ],
[ -3019.73 ,1006.15 ],
[ -3019.75 ,992.418 ],
[ -3018.9 ,1004.38 ],
[ -3017.32 ,1007.05 ],
[ -3016.42 ,1003.06 ],
[ -3016.32 ,1072.77 ],
[ -3016.06 ,1014.49 ],
[ -3015.68 ,1017.83 ],
[ -3015 ,1043.85 ],
[ -3015.31 ,1055.44 ],
[ -3014.95 ,1030.17 ],
[ -3014.57 ,1009.74 ],
[ -3014.68 ,1021.79 ],
[ -3013.3 ,1042.06 ],
[ -3013.13 ,1035.36 ],
[ -3013.17 ,1027.08 ],
[ -3012.42 ,1028.07 ],
[ -3012.3 ,1033.04 ],
[ -3012.09 ,1033.86 ],
[ -3012.18 ,1036.89 ],
[ -3012.26 ,1025.68 ],
[ -3011.79 ,1054.67 ],
[ -3011.38 ,1023.78 ],
[ -3011.17 ,1055.53 ],
[ -3010.87 ,1051.9 ],
[ -3011.32 ,1056.94 ],
[ -3011.65 ,1073.65 ],
[ -3011.62 ,1063.52 ],
[ -3010.55 ,1061.49 ],
[ -3010.85 ,1055.99 ],
[ -3009.45 ,1109.08 ],
[ -3009.55 ,1076.9 ],
[ -3008.4 ,1105.34 ],
[ -3007.18 ,1090.84 ],
[ -3006.28 ,1133.99 ],
[ -3004.18 ,1139.53 ],
[ -3002.72 ,1138.41 ],
[ -2999.78 ,1198.13 ],
[ -2997.89 ,1219.08 ],
[ -2995.19 ,1253.76 ],
[ -2993.01 ,1322.31 ],
[ -2989.26 ,1319.09 ],


]


curve_list_1 = [
[-3343.96 , 124.751],
[-3317.43 , 185.81],
[-3294.94 , 255.257],
[-3278.25 , 360.532],
[-3262.63 , 475.136],
[-3251.46 , 523.016],
[-3243.11 , 523.476],
[-3231.8 , 530.674],
[-3223.39 , 588.26],
[-3213.73 , 641.9],
[-3205.13 , 665.504],
[-3195.85 , 670.395],
[-3188.86 , 683.28],
[-3183.02 , 709.448],
[-3177.05 , 734.829],
[-3169.45 , 722.707],
[-3161.62 , 777.86],


]

curve_list_2 = [

[-3064.8 , 891.622],
[-3060.91 , 908.203],
[-3057.05 , 925.716],
[-3053.31 , 921.479],
[-3050.59 , 942.183],
[-3048.07 , 960.741],
[-3045.88 , 967.56],
[-3044.31 , 950.1],
[-3041.52 , 951.728],
[-3039.09 , 958.036],
[-3037.43 , 975.846],
[-3036.13 , 985.722],
[-3034.8 , 972.489],
[-3034.06 , 1012.12],
[-3034.17 , 999.821],
[-3033.84 , 980.31],
[-3032.81 , 988.835],
[-3031.94 , 989.783],
[-3031.43 , 992.385],
[-3029.72 , 981.833],
[-3028.3 , 999.028],
[-3027.95 , 1002.74],
[-3026.72 , 1019.47],
[-3026.17 , 983.607],
[-3025.63 , 1023.6],
[-3025.22 , 1023.31],
[-3025.72 , 996.225],
[-3025.91 , 1018.66],
[-3025.16 , 1008.71],
[-3025.01 , 1011.15],
[-3024.97 , 1026.51],
[-3024.58 , 1006.73],
[-3024.78 , 1012.39],
[-3024.72 , 1020.35],
[-3024.06 , 1011.47],
[-3023.12 , 1009.34],
[-3023.05 , 1015.12],
[-3023.74 , 1024.02],
[-3024.24 , 1029.85],
[-3023.27 , 1027.96],
[-3023.23 , 1014.46],
[-3023.28 , 1009.3],
[-3023.51 , 1016.9],
[-3023.65 , 1020.06],
[-3022.36 , 1010.15],
[-3022.08 , 1046],
[-3022.15 , 1047.37],
[-3022.08 , 1044.38],
[-3021.92 , 1050.62],
[-3021.58 , 1032.9],
[-3021.22 , 1020.65],
[-3020.97 , 1029.85],
[-3021.12 , 1052.7],
[-3021.07 , 1041.69],
[-3020.81 , 1038.46],
[-3020.26 , 1054.18],
[-3020.77 , 1072.63],
[-3019.5 , 1080.64],
[-3017.58 , 1086.04],
[-3017.14 , 1101.15],
[-3015.44 , 1133.39],
[-3014.11 , 1157.77],
]

melting = np.array(Extract(curve_list_1,1))[-1]
#region plot start
x_axis = Extract(list_val,1)
y_axis = Extract(list_val,0)
# smoothed_mode = interpolate.interp1d(y_axis, x_axis, 'cubic')
# floor_range = np.linspace(min(y_axis), max(y_axis), 500)

curve_fit_x = np.array(Extract(curve_list_1,1))
curve_fit_y = np.array(Extract(curve_list_1,0))
curve_fit_x_high = np.array(Extract(curve_list_2,1))
curve_fit_y_high = np.array(Extract(curve_list_2,0))

a, b = np.polyfit(curve_fit_x, curve_fit_y, 1)
a_high, b_high = np.polyfit(curve_fit_x_high, curve_fit_y_high, 1)

plt.xlabel("Temperature (K)")
plt.ylabel("Total Energy (eV)")
plt.suptitle(f"Total Energy vs Temperature ( {atoms_num} atoms )")
plt.title(f"Tau = {tau} fs, timestep = {timestep_1} fs, Î”Q = {delQ} eV")
# plt.legend(f"{timestep_1} fs", loc = 2)
# plt.plot(smoothed_mode(floor_range), floor_range,ls='solid', color='crimson')

plt.plot(x_axis,y_axis,  'r-o')
# plt.plot(curve_fit_x, a*curve_fit_x+b, color='black', linewidth=3)
# plt.plot(curve_fit_x_high, a_high*curve_fit_x_high+b_high, color='black', linewidth=3)
plt.grid()
#endregion


# Save fig

path = os.path.join(f"{atoms_num} atoms")
save_path = os.path.join(path,f"{tau}_{timestep_1}_{delQ}_EvsT.png")
os.makedirs(path, exist_ok=True)
# plt.text(x_axis[0],-3100,f'Heat Capacity - {round(a,5)} eV/K \nMelting point - {melting} K \nLatent heat - {round(b_high-b,5)} eV' ,fontsize=10, bbox=dict(facecolor='red', alpha=0.5) )
plt.legend(["Simulated","Curvefit"])
# plt.xticks(np.arange(min(x_axis), max(x_axis)+1, 200))
# plt.savefig(save_path, bbox_inches='tight')
plt.show()
