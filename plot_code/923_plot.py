from turtle import color
import numpy as np
import matplotlib.pyplot as plt
import os
from scipy import interpolate
# from scipy.interpolate import spline

def Extract(lst, index):
    return [item[index] for item in lst]

atoms_num = 923
timestep_1 = 1 
tau = 1000 * timestep_1
delQ = 30 #eV


list_val = [
[-3343.96 , 124.751],
[-3317.43 , 185.81],
[-3294.94 , 255.257],
[-3278.25 , 360.532],
[-3262.63 , 475.136],
[-3251.46 , 523.016],
[-3243.11 , 523.476],
[-3231.8 , 530.674],
[-3223.39 , 588.26],
[-3213.73 , 641.9],
[-3205.13 , 665.504],
[-3195.85 , 670.395],
[-3188.86 , 683.28],
[-3183.02 , 709.448],
[-3177.05 , 734.829],
[-3169.45 , 722.707],
[-3161.62 , 777.86],
[-3154.37 , 763.185],
[-3147.82 , 786.928],
[-3141.44 , 781.596],
[-3134.74 , 799.662],
[-3128.72 , 802.985],
[-3122.31 , 793.391],
[-3116.04 , 802.14],
[-3109.81 , 806.764],
[-3103.85 , 825.732],
[-3098.83 , 812.232],
[-3092.92 , 848.349],
[-3087.78 , 838.346],
[-3082.91 , 852.643],
[-3078.01 , 860.947],
[-3073.45 , 868.984],
[-3068.91 , 877.547],
[-3064.8 , 891.622],
[-3060.91 , 908.203],
[-3057.05 , 925.716],
[-3053.31 , 921.479],
[-3050.59 , 942.183],
[-3048.07 , 960.741],
[-3045.88 , 967.56],
[-3044.31 , 950.1],
[-3041.52 , 951.728],
[-3039.09 , 958.036],
[-3037.43 , 975.846],
[-3036.13 , 985.722],
[-3034.8 , 972.489],
[-3034.06 , 1012.12],
[-3034.17 , 999.821],
[-3033.84 , 980.31],
[-3032.81 , 988.835],
[-3031.94 , 989.783],
[-3031.43 , 992.385],
[-3029.72 , 981.833],
[-3028.3 , 999.028],
[-3027.95 , 1002.74],
[-3026.72 , 1019.47],
[-3026.17 , 983.607],
[-3025.63 , 1023.6],
[-3025.22 , 1023.31],
[-3025.72 , 996.225],
[-3025.91 , 1018.66],
[-3025.16 , 1008.71],
[-3025.01 , 1011.15],
[-3024.97 , 1026.51],
[-3024.58 , 1006.73],
[-3024.78 , 1012.39],
[-3024.72 , 1020.35],
[-3024.06 , 1011.47],
[-3023.12 , 1009.34],
[-3023.05 , 1015.12],
[-3023.74 , 1024.02],
[-3024.24 , 1029.85],
[-3023.27 , 1027.96],
[-3023.23 , 1014.46],
[-3023.28 , 1009.3],
[-3023.51 , 1016.9],
[-3023.65 , 1020.06],
[-3022.36 , 1010.15],
[-3022.08 , 1046],
[-3022.15 , 1047.37],
[-3022.08 , 1044.38],
[-3021.92 , 1050.62],
[-3021.58 , 1032.9],
[-3021.22 , 1020.65],
[-3020.97 , 1029.85],
[-3021.12 , 1052.7],
[-3021.07 , 1041.69],
[-3020.81 , 1038.46],
[-3020.26 , 1054.18],
[-3020.77 , 1072.63],
[-3019.5 , 1080.64],
[-3017.58 , 1086.04],
[-3017.14 , 1101.15],
[-3015.44 , 1133.39],
[-3014.11 , 1157.77],
[-3012.33 , 1188.4],
[-3009.73 , 1200.67],
[-3006.66 , 1234.07],
[-3003.67 , 1297.84],
[-2999.61 , 1327.85],
[-2996.52 , 1340.58],
[-2992.27 , 1410.1],


]


curve_list_1 = [
[-3343.96 , 124.751],
[-3317.43 , 185.81],
[-3294.94 , 255.257],
[-3278.25 , 360.532],
[-3262.63 , 475.136],
[-3251.46 , 523.016],
[-3243.11 , 523.476],
[-3231.8 , 530.674],
[-3223.39 , 588.26],
[-3213.73 , 641.9],
[-3205.13 , 665.504],
[-3195.85 , 670.395],
[-3188.86 , 683.28],
[-3183.02 , 709.448],
[-3177.05 , 734.829],
[-3169.45 , 722.707],
[-3161.62 , 777.86],


]

curve_list_2 = [

[-3064.8 , 891.622],
[-3060.91 , 908.203],
[-3057.05 , 925.716],
[-3053.31 , 921.479],
[-3050.59 , 942.183],
[-3048.07 , 960.741],
[-3045.88 , 967.56],
[-3044.31 , 950.1],
[-3041.52 , 951.728],
[-3039.09 , 958.036],
[-3037.43 , 975.846],
[-3036.13 , 985.722],
[-3034.8 , 972.489],
[-3034.06 , 1012.12],
[-3034.17 , 999.821],
[-3033.84 , 980.31],
[-3032.81 , 988.835],
[-3031.94 , 989.783],
[-3031.43 , 992.385],
[-3029.72 , 981.833],
[-3028.3 , 999.028],
[-3027.95 , 1002.74],
[-3026.72 , 1019.47],
[-3026.17 , 983.607],
[-3025.63 , 1023.6],
[-3025.22 , 1023.31],
[-3025.72 , 996.225],
[-3025.91 , 1018.66],
[-3025.16 , 1008.71],
[-3025.01 , 1011.15],
[-3024.97 , 1026.51],
[-3024.58 , 1006.73],
[-3024.78 , 1012.39],
[-3024.72 , 1020.35],
[-3024.06 , 1011.47],
[-3023.12 , 1009.34],
[-3023.05 , 1015.12],
[-3023.74 , 1024.02],
[-3024.24 , 1029.85],
[-3023.27 , 1027.96],
[-3023.23 , 1014.46],
[-3023.28 , 1009.3],
[-3023.51 , 1016.9],
[-3023.65 , 1020.06],
[-3022.36 , 1010.15],
[-3022.08 , 1046],
[-3022.15 , 1047.37],
[-3022.08 , 1044.38],
[-3021.92 , 1050.62],
[-3021.58 , 1032.9],
[-3021.22 , 1020.65],
[-3020.97 , 1029.85],
[-3021.12 , 1052.7],
[-3021.07 , 1041.69],
[-3020.81 , 1038.46],
[-3020.26 , 1054.18],
[-3020.77 , 1072.63],
[-3019.5 , 1080.64],
[-3017.58 , 1086.04],
[-3017.14 , 1101.15],
[-3015.44 , 1133.39],
[-3014.11 , 1157.77],
]

melting = np.array(Extract(curve_list_1,1))[-1]
#region plot start
x_axis = Extract(list_val,1)
y_axis = Extract(list_val,0)
# smoothed_mode = interpolate.interp1d(y_axis, x_axis, 'cubic')
# floor_range = np.linspace(min(y_axis), max(y_axis), 500)

curve_fit_x = np.array(Extract(curve_list_1,1))
curve_fit_y = np.array(Extract(curve_list_1,0))
curve_fit_x_high = np.array(Extract(curve_list_2,1))
curve_fit_y_high = np.array(Extract(curve_list_2,0))

a, b = np.polyfit(curve_fit_x, curve_fit_y, 1)
a_high, b_high = np.polyfit(curve_fit_x_high, curve_fit_y_high, 1)

plt.xlabel("Temperature (K)")
plt.ylabel("Total Energy (eV)")
plt.suptitle(f"Total Energy vs Temperature ( {atoms_num} atoms )")
plt.title(f"Tau = {tau} fs, timestep = {timestep_1} fs, Î”Q = {delQ} eV")
# plt.legend(f"{timestep_1} fs", loc = 2)
# plt.plot(smoothed_mode(floor_range), floor_range,ls='solid', color='crimson')

plt.plot(x_axis,y_axis,  'r-o')
plt.plot(curve_fit_x, a*curve_fit_x+b, color='black', linewidth=3)
plt.plot(curve_fit_x_high, a_high*curve_fit_x_high+b_high, color='black', linewidth=3)
plt.grid()
#endregion


# Save fig

path = os.path.join(f"{atoms_num} atoms")
save_path = os.path.join(path,f"{tau}_{timestep_1}_{delQ}_EvsT.png")
os.makedirs(path, exist_ok=True)
plt.text(x_axis[0],-3100,f'Heat Capacity - {round(a,5)} eV/K \nMelting point - {melting} K \nLatent heat - {round(b_high-b,5)} eV' ,fontsize=10, bbox=dict(facecolor='red', alpha=0.5) )
plt.legend(["Simulated","Curvefit"])
# plt.xticks(np.arange(min(x_axis), max(x_axis)+1, 200))
# plt.savefig(save_path, bbox_inches='tight')
plt.show()
